on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: build binaries
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v1
    - name: build
      run: |
        export GO111MODULE=on
        GOOS=windows GOARCH=amd64 go build -o bin/ci-test-windows-amd64.exe
        GOOS=linux   GOARCH=amd64 go build -o bin/ci-test-linux-amd64
    - name: upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: binaries
        path: bin/

  upload:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    steps:
      - name: Download build artefacts
        uses: actions/download-artifact@v1
        with:
          name: binaries
      - name: ls
        run: ls -lR
      - name: Create asset zips
        run: |
          mkdir assets
          zip assets/ci-test-${GITHUB_REV}-windows-amd64.zip bin/ci-test-windows-amd64.exe README.md
          zip assets/ci-test-${GITHUB_REV}-linux-amd64.zip bin/ci-test-linux-amd64 README.md
          sha256sum *zip > assets/SHASUMS256.txt
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./assets
          asset_name: ci-test-${{ github.ref }}-linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./assets
          asset_name: ci-test-${{ github.ref }}-windows-amd64.zip
          asset_content_type: application/zip
